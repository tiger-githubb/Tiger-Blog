{"ast":null,"code":"import Navigation from './components/Navigation-comp.vue';\nimport Footer from './components/Footer-comp.vue';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nexport default {\n  name: \"app\",\n  components: {\n    Navigation,\n    Footer\n  },\n\n  data() {\n    return {\n      navigation: null\n    };\n  },\n\n  created() {\n    firebase.auth().onAuthStateChanged(user => {\n      this.$store.commit('updateUser', user);\n\n      if (user) {\n        this.$store.dispatch('getCurrentUser', user);\n      }\n    }); //Проверяваме чрез служебния метод на firebase дали имаме логнат потребител.\n    //Ако имаме логнат потребител викаме от стора чрез dispatch екшъна getCurrentUser, който от своя страна, бърка в колекцията users, вади от там потребителя, който се е логнал в момента и после сетва данните от този потребител на стейта.\n\n    this.checkRoute();\n    this.$store.dispatch('getPost');\n  },\n\n  methods: {\n    checkRoute() {\n      if (this.$route.name == 'Login' || this.$route.name == 'Register' || this.$route.name == 'ForgotPassword') {\n        this.navigation = true;\n      } else {\n        this.navigation = false;\n      }\n    }\n\n  },\n  watch: {\n    $route() {\n      this.checkRoute();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAWA;AACA;AAEA;AACA;AAGA;EACAA,WADA;EAEAC;IACAC,UADA;IACAC;EADA,CAFA;;EAKAC;IACA;MACAC;IADA;EAGA,CATA;;EAUAC;IACAC;MACA;;MAEA;QACA;MACA;IACA,CANA,EADA,CASA;IACA;;IAEA;IACA;EACA,CAxBA;;EAyBAC;IACAC;MACA,IACA,+BACA,8BADA,IAEA,oCAHA,EAIA;QACA;MACA,CANA,MAMA;QACA;MACA;IACA;;EAXA,CAzBA;EAsCAC;IACAC;MACA;IACA;;EAHA;AAtCA","names":["name","components","Navigation","Footer","data","navigation","created","firebase","methods","checkRoute","watch","$route"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-wrapper\">\r\n    <div class=\"app\" v-if=\"this.$store.state.postLoaded\">\r\n      <Navigation v-if=\"!navigation\" />\r\n      <router-view />\r\n      <Footer v-if=\"!navigation\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Navigation from './components/Navigation-comp.vue';\r\nimport Footer from './components/Footer-comp.vue';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\nexport default {\r\n  name: \"app\",\r\n  components: {\r\n    Navigation, Footer\r\n  },\r\n  data() {\r\n    return {\r\n      navigation: null\r\n    };\r\n  },\r\n  created() {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.$store.commit('updateUser', user);\r\n\r\n      if(user) {\r\n        this.$store.dispatch('getCurrentUser', user);\r\n      }\r\n    });\r\n\r\n    //Проверяваме чрез служебния метод на firebase дали имаме логнат потребител.\r\n    //Ако имаме логнат потребител викаме от стора чрез dispatch екшъна getCurrentUser, който от своя страна, бърка в колекцията users, вади от там потребителя, който се е логнал в момента и после сетва данните от този потребител на стейта.\r\n\r\n    this.checkRoute();\r\n    this.$store.dispatch('getPost');\r\n  },\r\n  methods: {\r\n    checkRoute() {\r\n      if (\r\n        this.$route.name == 'Login' || \r\n        this.$route.name == 'Register' || \r\n        this.$route.name == 'ForgotPassword'\r\n      ) {\r\n        this.navigation = true;\r\n      } else {\r\n        this.navigation = false;\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.checkRoute();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import url(\"https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap\");\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: \"Quicksand\", sans-serif;\r\n}\r\n\r\n.app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.container {\r\n  max-width: 1440px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.link {\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: black;\r\n}\r\n\r\n.footer-link {\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: white;\r\n}\r\n\r\n.link-light {\r\n  color: #fff;\r\n}\r\n\r\n.arrow {\r\n  margin-left: 8px;\r\n  width: 12px;\r\n  path {\r\n    fill: #000;\r\n  }\r\n}\r\n\r\n.arrow-light {\r\n  path {\r\n    fill: #fff;\r\n  }\r\n}\r\n\r\nbutton,\r\n.router-button {\r\n  transition: 500ms ease all;\r\n  cursor: pointer;\r\n  margin-top: 24px;\r\n  padding: 12px 24px;\r\n  background-color: #303030;\r\n  color: #fff;\r\n  border-radius: 20px;\r\n  border: none;\r\n  text-transform: uppercase;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: rgba(48, 48, 48, 0.7);\r\n  }\r\n}\r\n\r\n.button-ghost {\r\n  color: #000;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  margin-top: 50px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  @media (min-width: 700px) {\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n  }\r\n\r\n  i {\r\n    margin-left: 8px;\r\n  }\r\n}\r\n\r\n.button-light {\r\n  background-color: transparent;\r\n  border: 2px solid #fff;\r\n  color: #fff;\r\n}\r\n\r\n.button-inactive {\r\n  pointer-events: none !important;\r\n  cursor: none !important;\r\n  background-color: rgba(128, 128, 128, 0.5) !important;\r\n}\r\n\r\n.error {\r\n  text-align: center;\r\n  font-size: 12px;\r\n  color: red;\r\n}\r\n\r\n.blog-card-wrap {\r\n  position: relative;\r\n  padding: 80px 16px;\r\n  background-color: #f1f1f1;\r\n  @media (min-width: 500px) {\r\n    padding: 100px 16px;\r\n  }\r\n\r\n  .blog-cards {\r\n    display: grid;\r\n    gap: 32px;\r\n    grid-template-columns: 1fr;\r\n\r\n    @media (min-width: 500px) {\r\n      grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    @media (min-width: 900px) {\r\n      grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    @media (min-width: 1200px) {\r\n      grid-template-columns: repeat(4, 1fr);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}