{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport db from '../firebase/firebaseInit.js';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    blogPosts: [],\n    postLoaded: null,\n    blogHTML: 'Écrivez ici le titre du post',\n    blogTitle: '',\n    blogPhotoName: '',\n    blogPhotoFileURL: null,\n    blogPhotoPreview: null,\n    editPost: null,\n    user: null,\n    profileAdmin: null,\n    profileEmail: '',\n    profileFirstName: '',\n    profileLastName: '',\n    profileUserName: '',\n    profileId: null,\n    profileInitials: ''\n  },\n  getters: {\n    blogPostsFeed(state) {\n      return state.blogPosts.slice(0, 2);\n    },\n\n    blogPostCards(state) {\n      return state.blogPosts.slice(2, 6);\n    }\n\n  },\n  mutations: {\n    newBlogPost(state, payload) {\n      state.blogHTML = payload;\n    },\n\n    updateBlogTitle(state, payload) {\n      state.blogTitle = payload;\n    },\n\n    fileNameChange(state, payload) {\n      state.blogPhotoName = payload;\n    },\n\n    createFileURL(state, payload) {\n      state.blogPhotoFileURL = payload;\n    },\n\n    openPhotoPreview(state) {\n      state.blogPhotoPreview = !state.blogPhotoPreview;\n    },\n\n    toggleEditPost(state, payload) {\n      state.editPost = payload;\n    },\n\n    setBlogState(state, currentBlog) {\n      state.blogTitle = currentBlog.blogTitle;\n      state.blogHTML = currentBlog.blogHTML;\n      state.blogPhotoFileURL = currentBlog.blogCoverPhoto;\n      state.blogPhotoName = currentBlog.blogCoverPhotoName;\n    },\n\n    filterBlogPost(state, blogPostId) {\n      state.blogPosts = state.blogPosts.filter(post => post.blogId != blogPostId);\n    },\n\n    updateUser(state, payload) {\n      state.user = payload;\n    },\n\n    setProfileAdmin(state, isAdmin) {\n      state.profileAdmin = isAdmin;\n    },\n\n    setProfileInfo(state, dbResult) {\n      state.profileId = dbResult.id;\n      state.profileEmail = dbResult.data().email;\n      state.profileFirstName = dbResult.data().firstName;\n      state.profileLastName = dbResult.data().lastName;\n      state.profileUserName = dbResult.data().username;\n    },\n\n    setProfileInitials(state) {\n      state.profileInitials = state.profileFirstName.charAt(0) + state.profileLastName.charAt(0);\n    },\n\n    changeFirstName(state, payload) {\n      state.profileFirstName = payload;\n    },\n\n    changeLastName(state, payload) {\n      state.profileLastName = payload;\n    },\n\n    changeUserName(state, payload) {\n      state.profileUserName = payload;\n    }\n\n  },\n  actions: {\n    async getCurrentUser({\n      commit\n    }, user) {\n      const dataBase = await db.collection('users').doc(firebase.auth().currentUser.uid);\n      const dbResult = await dataBase.get();\n      commit('setProfileInfo', dbResult);\n      commit('setProfileInitials');\n      const token = await user.getIdTokenResult();\n      const isAdmin = (await token.claims.email) == 'aristidetiger12@';\n      commit('setProfileAdmin', isAdmin);\n    },\n\n    async updateUserSettings({\n      commit,\n      state\n    }) {\n      const dataBase = await db.collection('users').doc(state.profileId);\n      await dataBase.update({\n        firstName: state.profileFirstName,\n        lastName: state.profileLastName,\n        username: state.profileUserName\n      });\n      commit('setProfileInitials');\n    },\n\n    async getPost({\n      state\n    }) {\n      const dataBase = await db.collection('blogPosts').orderBy('date', 'desc');\n      const dbResults = await dataBase.get();\n      dbResults.forEach(doc => {\n        if (!state.blogPosts.some(post => post.blogId == doc.id)) {\n          const data = {\n            blogId: doc.data().blogId,\n            blogHTML: doc.data().blogHTML,\n            blogCoverPhoto: doc.data().blogCoverPhoto,\n            blogTitle: doc.data().blogTitle,\n            blogDate: doc.data().date,\n            blogCoverPhotoName: doc.data().blogCoverPhotoName\n          };\n          state.blogPosts.push(data);\n        }\n      });\n      state.postLoaded = true;\n    },\n\n    async updatePost({\n      commit,\n      dispatch\n    }, blogPostId) {\n      commit('filterBlogPost', blogPostId);\n      await dispatch('getPost');\n    },\n\n    async deletePost({\n      commit\n    }, blogPostId) {\n      const post = await db.collection('blogPosts').doc(blogPostId);\n      await post.delete();\n      commit('filterBlogPost', blogPostId);\n    }\n\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","firebase","db","use","Store","state","blogPosts","postLoaded","blogHTML","blogTitle","blogPhotoName","blogPhotoFileURL","blogPhotoPreview","editPost","user","profileAdmin","profileEmail","profileFirstName","profileLastName","profileUserName","profileId","profileInitials","getters","blogPostsFeed","slice","blogPostCards","mutations","newBlogPost","payload","updateBlogTitle","fileNameChange","createFileURL","openPhotoPreview","toggleEditPost","setBlogState","currentBlog","blogCoverPhoto","blogCoverPhotoName","filterBlogPost","blogPostId","filter","post","blogId","updateUser","setProfileAdmin","isAdmin","setProfileInfo","dbResult","id","data","email","firstName","lastName","username","setProfileInitials","charAt","changeFirstName","changeLastName","changeUserName","actions","getCurrentUser","commit","dataBase","collection","doc","auth","currentUser","uid","get","token","getIdTokenResult","claims","updateUserSettings","update","getPost","orderBy","dbResults","forEach","some","blogDate","date","push","updatePost","dispatch","deletePost","delete","modules"],"sources":["C:/Users/HP/Desktop/test/good/Blog_with_VueJS_And_Firebase work/src/store/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport db from '../firebase/firebaseInit.js';\r\n\r\n\r\nVue.use(Vuex);\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    blogPosts: [],\r\n    postLoaded: null,\r\n    blogHTML: 'Écrivez ici le titre du post',\r\n    blogTitle: '',\r\n    blogPhotoName: '',\r\n    blogPhotoFileURL: null,\r\n    blogPhotoPreview: null,\r\n    editPost: null,\r\n    user: null,\r\n    profileAdmin: null,\r\n    profileEmail: '',\r\n    profileFirstName: '',\r\n    profileLastName: '',\r\n    profileUserName: '',\r\n    profileId: null,\r\n    profileInitials: ''\r\n  },\r\n  getters: {\r\n    blogPostsFeed(state) {\r\n      return state.blogPosts.slice(0, 2);\r\n    },\r\n    blogPostCards(state) {\r\n      return state.blogPosts.slice(2, 6);\r\n    }\r\n  },\r\n  mutations: {\r\n    newBlogPost(state, payload) {\r\n      state.blogHTML = payload;\r\n    },\r\n    updateBlogTitle(state, payload) {\r\n      state.blogTitle = payload;\r\n    },\r\n    fileNameChange(state, payload) {\r\n      state.blogPhotoName = payload;\r\n    },\r\n    createFileURL(state, payload) {\r\n      state.blogPhotoFileURL = payload;\r\n    },\r\n    openPhotoPreview(state) {\r\n      state.blogPhotoPreview = !state.blogPhotoPreview;\r\n    },\r\n    toggleEditPost(state, payload) {\r\n      state.editPost = payload;\r\n    },\r\n    setBlogState(state, currentBlog) {\r\n      state.blogTitle = currentBlog.blogTitle;\r\n      state.blogHTML = currentBlog.blogHTML;\r\n      state.blogPhotoFileURL = currentBlog.blogCoverPhoto;\r\n      state.blogPhotoName = currentBlog.blogCoverPhotoName;\r\n    },\r\n    filterBlogPost(state, blogPostId) {\r\n      state.blogPosts = state.blogPosts.filter(post => post.blogId != blogPostId);\r\n    },\r\n    updateUser(state, payload) {\r\n      state.user = payload;\r\n    },\r\n    setProfileAdmin(state, isAdmin) {\r\n      state.profileAdmin = isAdmin;\r\n    },\r\n    setProfileInfo(state, dbResult) {\r\n      state.profileId = dbResult.id;\r\n      state.profileEmail = dbResult.data().email;\r\n      state.profileFirstName = dbResult.data().firstName;\r\n      state.profileLastName = dbResult.data().lastName;\r\n      state.profileUserName = dbResult.data().username;\r\n    },\r\n    setProfileInitials(state) {\r\n      state.profileInitials = state.profileFirstName.charAt(0) + state.profileLastName.charAt(0);\r\n    },\r\n    changeFirstName(state, payload) {\r\n      state.profileFirstName = payload;\r\n    },\r\n    changeLastName(state, payload) {\r\n      state.profileLastName = payload;\r\n    },\r\n    changeUserName(state, payload) {\r\n      state.profileUserName = payload;\r\n    }\r\n  },\r\n  actions: {\r\n    async getCurrentUser({ commit }, user) {\r\n      const dataBase = await db.collection('users').doc(firebase.auth().currentUser.uid);\r\n      const dbResult = await dataBase.get();\r\n\r\n      commit('setProfileInfo', dbResult);\r\n      commit('setProfileInitials');\r\n      \r\n      const token = await user.getIdTokenResult();\r\n      const isAdmin = await token.claims.email == 'aristidetiger12@';\r\n      commit('setProfileAdmin', isAdmin);\r\n    },\r\n    async updateUserSettings({ commit, state }) {\r\n      const dataBase = await db.collection('users').doc(state.profileId);\r\n      await dataBase.update({\r\n        firstName: state.profileFirstName,\r\n        lastName: state.profileLastName,\r\n        username: state.profileUserName\r\n      });\r\n      commit('setProfileInitials');\r\n    },\r\n    async getPost({ state }) {\r\n      const dataBase = await db.collection('blogPosts').orderBy('date', 'desc');\r\n      const dbResults = await dataBase.get();\r\n      \r\n      dbResults.forEach(doc => {\r\n        if(!state.blogPosts.some(post => post.blogId == doc.id)) {\r\n          const data = {\r\n            blogId: doc.data().blogId,\r\n            blogHTML: doc.data().blogHTML,\r\n            blogCoverPhoto: doc.data().blogCoverPhoto,\r\n            blogTitle: doc.data().blogTitle,\r\n            blogDate: doc.data().date,\r\n            blogCoverPhotoName: doc.data().blogCoverPhotoName\r\n          };\r\n\r\n          state.blogPosts.push(data);\r\n        }\r\n      });\r\n\r\n      state.postLoaded = true;\r\n    },\r\n    async updatePost({ commit, dispatch }, blogPostId) {\r\n      commit('filterBlogPost', blogPostId);\r\n      await dispatch('getPost');\r\n    },\r\n    async deletePost({ commit }, blogPostId) {\r\n      const post = await db.collection('blogPosts').doc(blogPostId);\r\n      await post.delete();\r\n      commit('filterBlogPost', blogPostId);\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}